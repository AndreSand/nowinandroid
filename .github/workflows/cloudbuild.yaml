# cloudbuild.yaml
# Triggers Google Cloud Build CI pipeline
# Build history go to console https://cloud.google.com/build
steps:
  # Set a persistent volume according to https://cloud.google.com/cloud-build/docs/build-config (search for volumes)
  - id: 'ubuntu'
    name: 'ubuntu'
    volumes:
      - name: 'vol1'
        path: '/persistent_volume'
    args: ['cp', '-a', '.', '/persistent_volume']
  # Run Lint with Gradle Image from mounted /persistent_volume using name: vol1
  - id: 'run-lint'
    name: 'gcr.io/cloud-builders/docker'
    volumes:
      - name: 'vol1'
        path: '/persistent_volume'
    args: ['run', '-v', 'vol1:/home/app', '--rm', 'gcr.io/android-build:tag1', '/bin/sh', '-c', 'cd /home/app && ./gradlew :app:lintProdRelease :app-nia-catalog:lintRelease :lint:lint']
  # Run Assemble with Gradle Image from mounted /persistent_volume using name: vol1
  - id: 'run-assemble'
    name: 'gcr.io/cloud-builders/docker'
    volumes:
      - name: 'vol1'
        path: '/persistent_volume'
    args: ['run', '-v', 'vol1:/home/app', '--rm', 'gcr.io/android-build:tag1', '/bin/sh', '-c', 'cd /home/app && ./gradlew assemble']
  # Run Lint with Gradle Image from mounted /persistent_volume using name: vol1
  - id: 'run-package'
    name: 'gcr.io/cloud-builders/docker'
    volumes:
      - name: 'vol1'
        path: '/persistent_volume'
    args: ['run', '-v', 'vol1:/home/app', '--rm', 'gcr.io/android-build:tag1', '/bin/sh', '-c', 'cd /home/app && ./gradlew packageDemoDebug packageDemoDebugAndroidTest']
timeout: 7200s

    #works
    #./gradlew feature:foryou:assembleProdDebug
    #./gradlew app:prodBenchmarkOssLicensesTask
    #./gradlew assemble
    # lintDemoDebug

# cloudbuild.yaml
  # Push the APK Output from vol1 to your GCS Bucket with Short Commit SHA.
#  - name: 'gcr.io/cloud-builders/gsutil'
#    volumes:
#      - name: 'vol1'
#        path: '/persistent_volume'
#    args: ['cp', '/persistent_volume/app/build/outputs/apk/debug/app-debug.apk', 'gs://fullstackgcp-apk-builds/app-debug-$SHORT_SHA.apk']
